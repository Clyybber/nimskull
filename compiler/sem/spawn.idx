srVoid	sem/spawn.html#srVoid	TSpawnResult.srVoid	
srFlowVar	sem/spawn.html#srFlowVar	TSpawnResult.srFlowVar	
srByVar	sem/spawn.html#srByVar	TSpawnResult.srByVar	
TSpawnResult	sem/spawn.html#TSpawnResult	spawn: TSpawnResult	
spawnResult	sem/spawn.html#spawnResult,PType,bool	spawn: spawnResult(t: PType; inParallel: bool): TSpawnResult	
wrapProcForSpawn	sem/spawn.html#wrapProcForSpawn,ModuleGraph,IdGenerator,PSym,PNode,PType,PNode,PNode	spawn: wrapProcForSpawn(g: ModuleGraph; idgen: IdGenerator; owner: PSym;\n                 spawnExpr: PNode; retType: PType; barrier, dest: PNode = nil): PNode	
