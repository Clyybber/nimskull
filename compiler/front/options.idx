hasTinyCBackend	front/options.html#hasTinyCBackend	options: hasTinyCBackend	
useEffectSystem	front/options.html#useEffectSystem	options: useEffectSystem	
useWriteTracking	front/options.html#useWriteTracking	options: useWriteTracking	
hasFFI	front/options.html#hasFFI	options: hasFFI	
copyrightYear	front/options.html#copyrightYear	options: copyrightYear	
nimEnableCovariance	front/options.html#nimEnableCovariance	options: nimEnableCovariance	
harmlessOptions	front/options.html#harmlessOptions	options: harmlessOptions	
genSubDir	front/options.html#genSubDir	options: genSubDir	
NimExt	front/options.html#NimExt	options: NimExt	
RodExt	front/options.html#RodExt	options: RodExt	
HtmlExt	front/options.html#HtmlExt	options: HtmlExt	
JsonExt	front/options.html#JsonExt	options: JsonExt	
TagsExt	front/options.html#TagsExt	options: TagsExt	
TexExt	front/options.html#TexExt	options: TexExt	
IniExt	front/options.html#IniExt	options: IniExt	
DefaultConfig	front/options.html#DefaultConfig	options: DefaultConfig	
DefaultConfigNims	front/options.html#DefaultConfigNims	options: DefaultConfigNims	
DocConfig	front/options.html#DocConfig	options: DocConfig	
DocTexConfig	front/options.html#DocTexConfig	options: DocTexConfig	
htmldocsDir	front/options.html#htmldocsDir	options: htmldocsDir	
docRootDefault	front/options.html#docRootDefault	options: docRootDefault	
oKeepVariableNames	front/options.html#oKeepVariableNames	options: oKeepVariableNames	
spellSuggestSecretSauce	front/options.html#spellSuggestSecretSauce	options: spellSuggestSecretSauce	
cmdBackends	front/options.html#cmdBackends	options: cmdBackends	
cmdDocLike	front/options.html#cmdDocLike	options: cmdDocLike	
NimVer	front/options.html#NimVer	options: NimVer	
TStringSeq	front/options.html#TStringSeq	options: TStringSeq	
ideNone	front/options.html#ideNone	IdeCmd.ideNone	
ideSug	front/options.html#ideSug	IdeCmd.ideSug	
ideCon	front/options.html#ideCon	IdeCmd.ideCon	
ideDef	front/options.html#ideDef	IdeCmd.ideDef	
ideUse	front/options.html#ideUse	IdeCmd.ideUse	
ideDus	front/options.html#ideDus	IdeCmd.ideDus	
ideChk	front/options.html#ideChk	IdeCmd.ideChk	
ideMod	front/options.html#ideMod	IdeCmd.ideMod	
ideHighlight	front/options.html#ideHighlight	IdeCmd.ideHighlight	
ideOutline	front/options.html#ideOutline	IdeCmd.ideOutline	
ideKnown	front/options.html#ideKnown	IdeCmd.ideKnown	
ideMsg	front/options.html#ideMsg	IdeCmd.ideMsg	
ideProject	front/options.html#ideProject	IdeCmd.ideProject	
IdeCmd	front/options.html#IdeCmd	options: IdeCmd	
CfileFlag	front/options.html#CfileFlag	options: CfileFlag	
Cfile	front/options.html#Cfile	options: Cfile	
CfileList	front/options.html#CfileList	options: CfileList	
Suggest	front/options.html#Suggest	options: Suggest	
Suggestions	front/options.html#Suggestions	options: Suggestions	
ProfileInfo	front/options.html#ProfileInfo	options: ProfileInfo	
ProfileData	front/options.html#ProfileData	options: ProfileData	
stdOrrStdout	front/options.html#stdOrrStdout	StdOrrKind.stdOrrStdout	
stdOrrStderr	front/options.html#stdOrrStderr	StdOrrKind.stdOrrStderr	
StdOrrKind	front/options.html#StdOrrKind	options: StdOrrKind	
msgStdout	front/options.html#msgStdout	MsgFlag.msgStdout	
msgNoUnitSep	front/options.html#msgNoUnitSep	MsgFlag.msgNoUnitSep	
MsgFlag	front/options.html#MsgFlag	options: MsgFlag	
MsgFlags	front/options.html#MsgFlags	options: MsgFlags	
doDefault	front/options.html#doDefault	TErrorHandling.doDefault	
doNothing	front/options.html#doNothing	TErrorHandling.doNothing	
doAbort	front/options.html#doAbort	TErrorHandling.doAbort	
doRaise	front/options.html#doRaise	TErrorHandling.doRaise	
TErrorHandling	front/options.html#TErrorHandling	options: TErrorHandling	
ReportHook	front/options.html#ReportHook	options: ReportHook	
HackController	front/options.html#HackController	options: HackController	
ConfigRef	front/options.html#ConfigRef	options: ConfigRef	
backend	front/options.html#backend,ConfigRef	options: backend(conf`gensym0: ConfigRef): TBackend	
backend=	front/options.html#backend=,ConfigRef,TBackend	options: backend=(conf`gensym0: ConfigRef; val`gensym0: TBackend)	
target	front/options.html#target,ConfigRef	options: target(conf`gensym1: ConfigRef): Target	
target=	front/options.html#target=,ConfigRef,Target	options: target=(conf`gensym1: ConfigRef; val`gensym1: Target)	
cppDefines	front/options.html#cppDefines,ConfigRef	options: cppDefines(conf`gensym2: ConfigRef): HashSet[string]	
cppDefines=	front/options.html#cppDefines=,ConfigRef,HashSet[string]	options: cppDefines=(conf`gensym2: ConfigRef; val`gensym2: HashSet[string])	
cmd	front/options.html#cmd,ConfigRef	options: cmd(conf`gensym3: ConfigRef): Command	
cmd=	front/options.html#cmd=,ConfigRef,Command	options: cmd=(conf`gensym3: ConfigRef; val`gensym3: Command)	
selectedGC	front/options.html#selectedGC,ConfigRef	options: selectedGC(conf`gensym4: ConfigRef): TGCMode	
selectedGC=	front/options.html#selectedGC=,ConfigRef,TGCMode	options: selectedGC=(conf`gensym4: ConfigRef; val`gensym4: TGCMode)	
exc	front/options.html#exc,ConfigRef	options: exc(conf`gensym5: ConfigRef): ExceptionSystem	
exc=	front/options.html#exc=,ConfigRef,ExceptionSystem	options: exc=(conf`gensym5: ConfigRef; val`gensym5: ExceptionSystem)	
cCompiler	front/options.html#cCompiler,ConfigRef	options: cCompiler(conf`gensym6: ConfigRef): TSystemCC	
cCompiler=	front/options.html#cCompiler=,ConfigRef,TSystemCC	options: cCompiler=(conf`gensym6: ConfigRef; val`gensym6: TSystemCC)	
filenameOption	front/options.html#filenameOption,ConfigRef	options: filenameOption(conf`gensym7: ConfigRef): FilenameOption	
filenameOption=	front/options.html#filenameOption=,ConfigRef,FilenameOption	options: filenameOption=(conf`gensym7: ConfigRef; val`gensym7: FilenameOption)	
numberOfProcessors	front/options.html#numberOfProcessors,ConfigRef	options: numberOfProcessors(conf`gensym8: ConfigRef): int	
numberOfProcessors=	front/options.html#numberOfProcessors=,ConfigRef,int	options: numberOfProcessors=(conf`gensym8: ConfigRef; val`gensym8: int)	
outFile	front/options.html#outFile,ConfigRef	options: outFile(conf`gensym9: ConfigRef): RelativeFile	
outFile=	front/options.html#outFile=,ConfigRef,RelativeFile	options: outFile=(conf`gensym9: ConfigRef; val`gensym9: RelativeFile)	
outDir	front/options.html#outDir,ConfigRef	options: outDir(conf`gensym10: ConfigRef): AbsoluteDir	
outDir=	front/options.html#outDir=,ConfigRef,AbsoluteDir	options: outDir=(conf`gensym10: ConfigRef; val`gensym10: AbsoluteDir)	
projectPath	front/options.html#projectPath,ConfigRef	options: projectPath(conf`gensym11: ConfigRef): AbsoluteDir	
projectPath=	front/options.html#projectPath=,ConfigRef,AbsoluteDir	options: projectPath=(conf`gensym11: ConfigRef; val`gensym11: AbsoluteDir)	
projectName	front/options.html#projectName,ConfigRef	options: projectName(conf`gensym12: ConfigRef): string	
projectName=	front/options.html#projectName=,ConfigRef,string	options: projectName=(conf`gensym12: ConfigRef; val`gensym12: string)	
projectFull	front/options.html#projectFull,ConfigRef	options: projectFull(conf`gensym13: ConfigRef): AbsoluteFile	
projectFull=	front/options.html#projectFull=,ConfigRef,AbsoluteFile	options: projectFull=(conf`gensym13: ConfigRef; val`gensym13: AbsoluteFile)	
cppCustomNamespace	front/options.html#cppCustomNamespace,ConfigRef	options: cppCustomNamespace(conf`gensym14: ConfigRef): string	
cppCustomNamespace=	front/options.html#cppCustomNamespace=,ConfigRef,string	options: cppCustomNamespace=(conf`gensym14: ConfigRef; val`gensym14: string)	
implicitImports	front/options.html#implicitImports,ConfigRef	options: implicitImports(conf`gensym16: ConfigRef): seq[string]	
implicitImports=	front/options.html#implicitImports=,ConfigRef,	options: implicitImports=(conf`gensym16: ConfigRef; val`gensym16: seq[string])	
implicitImportsAdd	front/options.html#implicitImportsAdd,ConfigRef,	options: implicitImportsAdd(conf`gensym15: ConfigRef;\n                   item`gensym15: string | seq[string])	
implicitIncludes	front/options.html#implicitIncludes,ConfigRef	options: implicitIncludes(conf`gensym18: ConfigRef): seq[string]	
implicitIncludes=	front/options.html#implicitIncludes=,ConfigRef,	options: implicitIncludes=(conf`gensym18: ConfigRef; val`gensym18: seq[string])	
implicitIncludesAdd	front/options.html#implicitIncludesAdd,ConfigRef,	options: implicitIncludesAdd(conf`gensym17: ConfigRef;\n                    item`gensym17: string | seq[string])	
cIncludes	front/options.html#cIncludes,ConfigRef	options: cIncludes(conf`gensym20: ConfigRef): seq[AbsoluteDir]	
cIncludes=	front/options.html#cIncludes=,ConfigRef,	options: cIncludes=(conf`gensym20: ConfigRef; val`gensym20: seq[AbsoluteDir])	
cIncludesAdd	front/options.html#cIncludesAdd,ConfigRef,	options: cIncludesAdd(conf`gensym19: ConfigRef;\n             item`gensym19: AbsoluteDir | seq[AbsoluteDir])	
cLibs	front/options.html#cLibs,ConfigRef	options: cLibs(conf`gensym22: ConfigRef): seq[AbsoluteDir]	
cLibs=	front/options.html#cLibs=,ConfigRef,	options: cLibs=(conf`gensym22: ConfigRef; val`gensym22: seq[AbsoluteDir])	
cLibsAdd	front/options.html#cLibsAdd,ConfigRef,	options: cLibsAdd(conf`gensym21: ConfigRef;\n         item`gensym21: AbsoluteDir | seq[AbsoluteDir])	
cLinkedLibs	front/options.html#cLinkedLibs,ConfigRef	options: cLinkedLibs(conf`gensym24: ConfigRef): seq[string]	
cLinkedLibs=	front/options.html#cLinkedLibs=,ConfigRef,	options: cLinkedLibs=(conf`gensym24: ConfigRef; val`gensym24: seq[string])	
cLinkedLibsAdd	front/options.html#cLinkedLibsAdd,ConfigRef,	options: cLinkedLibsAdd(conf`gensym23: ConfigRef; item`gensym23: string | seq[string])	
linkOptionsCmd	front/options.html#linkOptionsCmd,ConfigRef	options: linkOptionsCmd(conf`gensym26: ConfigRef): seq[string]	
linkOptionsCmd=	front/options.html#linkOptionsCmd=,ConfigRef,	options: linkOptionsCmd=(conf`gensym26: ConfigRef; val`gensym26: seq[string])	
linkOptionsCmdAdd	front/options.html#linkOptionsCmdAdd,ConfigRef,	options: linkOptionsCmdAdd(conf`gensym25: ConfigRef;\n                  item`gensym25: string | seq[string])	
compileOptionsCmd	front/options.html#compileOptionsCmd,ConfigRef	options: compileOptionsCmd(conf`gensym28: ConfigRef): seq[string]	
compileOptionsCmd=	front/options.html#compileOptionsCmd=,ConfigRef,	options: compileOptionsCmd=(conf`gensym28: ConfigRef; val`gensym28: seq[string])	
compileOptionsCmdAdd	front/options.html#compileOptionsCmdAdd,ConfigRef,	options: compileOptionsCmdAdd(conf`gensym27: ConfigRef;\n                     item`gensym27: string | seq[string])	
nimblePaths	front/options.html#nimblePaths,ConfigRef	options: nimblePaths(conf`gensym30: ConfigRef): seq[AbsoluteDir]	
nimblePaths=	front/options.html#nimblePaths=,ConfigRef,	options: nimblePaths=(conf`gensym30: ConfigRef; val`gensym30: seq[AbsoluteDir])	
nimblePathsAdd	front/options.html#nimblePathsAdd,ConfigRef,	options: nimblePathsAdd(conf`gensym29: ConfigRef;\n               item`gensym29: AbsoluteDir | seq[AbsoluteDir])	
searchPaths	front/options.html#searchPaths,ConfigRef	options: searchPaths(conf`gensym32: ConfigRef): seq[AbsoluteDir]	
searchPaths=	front/options.html#searchPaths=,ConfigRef,	options: searchPaths=(conf`gensym32: ConfigRef; val`gensym32: seq[AbsoluteDir])	
searchPathsAdd	front/options.html#searchPathsAdd,ConfigRef,	options: searchPathsAdd(conf`gensym31: ConfigRef;\n               item`gensym31: AbsoluteDir | seq[AbsoluteDir])	
lazyPaths	front/options.html#lazyPaths,ConfigRef	options: lazyPaths(conf`gensym34: ConfigRef): seq[AbsoluteDir]	
lazyPaths=	front/options.html#lazyPaths=,ConfigRef,	options: lazyPaths=(conf`gensym34: ConfigRef; val`gensym34: seq[AbsoluteDir])	
lazyPathsAdd	front/options.html#lazyPathsAdd,ConfigRef,	options: lazyPathsAdd(conf`gensym33: ConfigRef;\n             item`gensym33: AbsoluteDir | seq[AbsoluteDir])	
localOptions	front/options.html#localOptions,ConfigRef	options: localOptions(conf`gensym36: ConfigRef): TOptions	
localOptions=	front/options.html#localOptions=,ConfigRef,TOptions	options: localOptions=(conf`gensym36: ConfigRef; val`gensym36: TOptions)	
incl	front/options.html#incl,ConfigRef,	options: incl(conf`gensym35: ConfigRef; item`gensym35: TOption | TOptions)	
excl	front/options.html#excl,ConfigRef,	options: excl(conf`gensym35: ConfigRef; item`gensym35: TOption | TOptions)	
globalOptions	front/options.html#globalOptions,ConfigRef	options: globalOptions(conf`gensym38: ConfigRef): TGlobalOptions	
globalOptions=	front/options.html#globalOptions=,ConfigRef,TGlobalOptions	options: globalOptions=(conf`gensym38: ConfigRef; val`gensym38: TGlobalOptions)	
incl	front/options.html#incl,ConfigRef,_2	options: incl(conf`gensym37: ConfigRef; item`gensym37: TGlobalOption | TGlobalOptions)	
excl	front/options.html#excl,ConfigRef,_2	options: excl(conf`gensym37: ConfigRef; item`gensym37: TGlobalOption | TGlobalOptions)	
features	front/options.html#features,ConfigRef	options: features(conf`gensym40: ConfigRef): set[Feature]	
features=	front/options.html#features=,ConfigRef,set[Feature]	options: features=(conf`gensym40: ConfigRef; val`gensym40: set[Feature])	
incl	front/options.html#incl,ConfigRef,_3	options: incl(conf`gensym39: ConfigRef; item`gensym39: Feature | set[Feature])	
excl	front/options.html#excl,ConfigRef,_3	options: excl(conf`gensym39: ConfigRef; item`gensym39: Feature | set[Feature])	
legacyFeatures	front/options.html#legacyFeatures,ConfigRef	options: legacyFeatures(conf`gensym42: ConfigRef): set[LegacyFeature]	
legacyFeatures=	front/options.html#legacyFeatures=,ConfigRef,set[LegacyFeature]	options: legacyFeatures=(conf`gensym42: ConfigRef; val`gensym42: set[LegacyFeature])	
incl	front/options.html#incl,ConfigRef,_4	options: incl(conf`gensym41: ConfigRef; item`gensym41: LegacyFeature | set[LegacyFeature])	
excl	front/options.html#excl,ConfigRef,_4	options: excl(conf`gensym41: ConfigRef; item`gensym41: LegacyFeature | set[LegacyFeature])	
dllOverrides	front/options.html#dllOverrides,ConfigRef	options: dllOverrides(conf`gensym44: ConfigRef): StringTableRef	
dllOverrides=	front/options.html#dllOverrides=,ConfigRef,StringTableRef	options: dllOverrides=(conf`gensym44: ConfigRef; val`gensym44: StringTableRef)	
dllOverridesSet	front/options.html#dllOverridesSet,ConfigRef,string,string	options: dllOverridesSet(conf`gensym43: ConfigRef; key`gensym43: string;\n                value`gensym43: string)	
dllOverridesGet	front/options.html#dllOverridesGet,ConfigRef,string	options: dllOverridesGet(conf`gensym43: ConfigRef; key`gensym43: string): string	
dllOverridesDel	front/options.html#dllOverridesDel,ConfigRef,string	options: dllOverridesDel(conf`gensym43: ConfigRef; key`gensym43: string)	
symbols	front/options.html#symbols,ConfigRef	options: symbols(conf`gensym46: ConfigRef): StringTableRef	
symbols=	front/options.html#symbols=,ConfigRef,StringTableRef	options: symbols=(conf`gensym46: ConfigRef; val`gensym46: StringTableRef)	
symbolsSet	front/options.html#symbolsSet,ConfigRef,string,string	options: symbolsSet(conf`gensym45: ConfigRef; key`gensym45: string;\n           value`gensym45: string)	
symbolsGet	front/options.html#symbolsGet,ConfigRef,string	options: symbolsGet(conf`gensym45: ConfigRef; key`gensym45: string): string	
symbolsDel	front/options.html#symbolsDel,ConfigRef,string	options: symbolsDel(conf`gensym45: ConfigRef; key`gensym45: string)	
macrosToExpand	front/options.html#macrosToExpand,ConfigRef	options: macrosToExpand(conf`gensym48: ConfigRef): StringTableRef	
macrosToExpand=	front/options.html#macrosToExpand=,ConfigRef,StringTableRef	options: macrosToExpand=(conf`gensym48: ConfigRef; val`gensym48: StringTableRef)	
macrosToExpandSet	front/options.html#macrosToExpandSet,ConfigRef,string,string	options: macrosToExpandSet(conf`gensym47: ConfigRef; key`gensym47: string;\n                  value`gensym47: string)	
macrosToExpandGet	front/options.html#macrosToExpandGet,ConfigRef,string	options: macrosToExpandGet(conf`gensym47: ConfigRef; key`gensym47: string): string	
macrosToExpandDel	front/options.html#macrosToExpandDel,ConfigRef,string	options: macrosToExpandDel(conf`gensym47: ConfigRef; key`gensym47: string)	
arcToExpand	front/options.html#arcToExpand,ConfigRef	options: arcToExpand(conf`gensym50: ConfigRef): StringTableRef	
arcToExpand=	front/options.html#arcToExpand=,ConfigRef,StringTableRef	options: arcToExpand=(conf`gensym50: ConfigRef; val`gensym50: StringTableRef)	
arcToExpandSet	front/options.html#arcToExpandSet,ConfigRef,string,string	options: arcToExpandSet(conf`gensym49: ConfigRef; key`gensym49: string;\n               value`gensym49: string)	
arcToExpandGet	front/options.html#arcToExpandGet,ConfigRef,string	options: arcToExpandGet(conf`gensym49: ConfigRef; key`gensym49: string): string	
arcToExpandDel	front/options.html#arcToExpandDel,ConfigRef,string	options: arcToExpandDel(conf`gensym49: ConfigRef; key`gensym49: string)	
defineSymbol	front/options.html#defineSymbol,ConfigRef,string,string	options: defineSymbol(conf: ConfigRef; symbol: string; value: string = &quot;true&quot;)	
undefSymbol	front/options.html#undefSymbol,ConfigRef,string	options: undefSymbol(conf: ConfigRef; symbol: string)	
definedSymbolNames	front/options.html#definedSymbolNames.i,ConfigRef	options: definedSymbolNames(conf: ConfigRef): string	
countDefinedSymbols	front/options.html#countDefinedSymbols,ConfigRef	options: countDefinedSymbols(conf: ConfigRef): int	
incl	front/options.html#incl,ConfigRef,ConfNoteSet,ReportKind	options: incl(conf: ConfigRef; nset: ConfNoteSet; note: ReportKind)	
excl	front/options.html#excl,ConfigRef,ConfNoteSet,ReportKind	options: excl(conf: ConfigRef; nset: ConfNoteSet; note: ReportKind)	
asgn	front/options.html#asgn,ConfigRef,ConfNoteSet,ReportKinds	options: asgn(conf: ConfigRef; nset: ConfNoteSet; notes: ReportKinds)	
asgn	front/options.html#asgn,ConfigRef,ConfNoteSet,ConfNoteSet	options: asgn(conf: ConfigRef; sto, sfrom: ConfNoteSet)	
flip	front/options.html#flip,ConfigRef,ConfNoteSet,ReportKind,bool	options: flip(conf: ConfigRef; nset: ConfNoteSet; note: ReportKind; state: bool)	
options	front/options.html#options,ConfigRef	options: options(conf: ConfigRef): TOptions	
options=	front/options.html#options=,ConfigRef,TOptions	options: options=(conf: ConfigRef; opts: TOptions)	
modifiedyNotes	front/options.html#modifiedyNotes,ConfigRef	options: modifiedyNotes(conf: ConfigRef): ReportKinds	
cmdlineNotes	front/options.html#cmdlineNotes,ConfigRef	options: cmdlineNotes(conf: ConfigRef): ReportKinds	
foreignPackageNotes	front/options.html#foreignPackageNotes,ConfigRef	options: foreignPackageNotes(conf: ConfigRef): ReportKinds	
notes	front/options.html#notes,ConfigRef	options: notes(conf: ConfigRef): ReportKinds	
warningAsErrors	front/options.html#warningAsErrors,ConfigRef	options: warningAsErrors(conf: ConfigRef): ReportKinds	
hintsAsErrors	front/options.html#hintsAsErrors,ConfigRef	options: hintsAsErrors(conf: ConfigRef): ReportKinds	
mainPackageNotes	front/options.html#mainPackageNotes,ConfigRef	options: mainPackageNotes(conf: ConfigRef): ReportKinds	
modifiedyNotes=	front/options.html#modifiedyNotes=,ConfigRef,ReportKinds	options: modifiedyNotes=(conf: ConfigRef; nset: ReportKinds)	
cmdlineNotes=	front/options.html#cmdlineNotes=,ConfigRef,ReportKinds	options: cmdlineNotes=(conf: ConfigRef; nset: ReportKinds)	
foreignPackageNotes=	front/options.html#foreignPackageNotes=,ConfigRef,ReportKinds	options: foreignPackageNotes=(conf: ConfigRef; nset: ReportKinds)	
notes=	front/options.html#notes=,ConfigRef,ReportKinds	options: notes=(conf: ConfigRef; nset: ReportKinds)	
warningAsErrors=	front/options.html#warningAsErrors=,ConfigRef,ReportKinds	options: warningAsErrors=(conf: ConfigRef; nset: ReportKinds)	
hintsAsErrors=	front/options.html#hintsAsErrors=,ConfigRef,ReportKinds	options: hintsAsErrors=(conf: ConfigRef; nset: ReportKinds)	
mainPackageNotes=	front/options.html#mainPackageNotes=,ConfigRef,ReportKinds	options: mainPackageNotes=(conf: ConfigRef; nset: ReportKinds)	
writelnHook	front/options.html#writelnHook,ConfigRef,string,MsgFlags	options: writelnHook(conf: ConfigRef; msg: string; flags: MsgFlags = {})	
writeHook	front/options.html#writeHook,ConfigRef,string,MsgFlags	options: writeHook(conf: ConfigRef; msg: string; flags: MsgFlags = {})	
writeln	front/options.html#writeln,ConfigRef,varargs[string,]	options: writeln(conf: ConfigRef; args: varargs[string, `$`])	
write	front/options.html#write,ConfigRef,varargs[string,]	options: write(conf: ConfigRef; args: varargs[string, `$`])	
setReportHook	front/options.html#setReportHook,ConfigRef,ReportHook	options: setReportHook(conf: ConfigRef; hook: ReportHook)	
getReportHook	front/options.html#getReportHook,ConfigRef	options: getReportHook(conf: ConfigRef): ReportHook	
report	front/options.html#report,ConfigRef,Report	options: report(conf: ConfigRef; inReport: Report): TErrorHandling	
canReport	front/options.html#canReport,ConfigRef,ReportId	options: canReport(conf: ConfigRef; id: ReportId): bool	
canReport	front/options.html#canReport,ConfigRef,PNode	options: canReport(conf: ConfigRef; node: PNode): bool	
report	front/options.html#report,ConfigRef,ReportId	options: report(conf: ConfigRef; id: ReportId): TErrorHandling	
report	front/options.html#report,ConfigRef,PNode	options: report(conf: ConfigRef; node: PNode): TErrorHandling	
report	front/options.html#report.t,ConfigRef,R	options: report[R: ReportTypes](conf: ConfigRef; inReport: R): TErrorHandling	
report	front/options.html#report.t,ConfigRef,TLineInfo,R	options: report[R: ReportTypes](conf: ConfigRef; tinfo: TLineInfo; inReport: R): TErrorHandling	
addReport	front/options.html#addReport,ConfigRef,Report	options: addReport(conf: ConfigRef; report: Report): ReportId	
getReport	front/options.html#getReport,ConfigRef,ReportId	options: getReport(conf: ConfigRef; report: ReportId): Report	
getReport	front/options.html#getReport,ConfigRef,PNode	options: getReport(conf: ConfigRef; err: PNode): Report	
store	front/options.html#store.t,ConfigRef,ReportTypes	options: store(conf: ConfigRef; report: ReportTypes): untyped	
store	front/options.html#store.t,ConfigRef,TLineInfo,ReportTypes	options: store(conf: ConfigRef; linfo: TLineInfo; report: ReportTypes): untyped	
isCompilerFatal	front/options.html#isCompilerFatal,ConfigRef,Report	options: isCompilerFatal(conf: ConfigRef; report: Report): bool	
severity	front/options.html#severity,ConfigRef,	options: severity(conf: ConfigRef; report: ReportTypes | Report): ReportSeverity	
isCodeError	front/options.html#isCodeError,ConfigRef,Report	options: isCodeError(conf: ConfigRef; report: Report): bool	
useColor	front/options.html#useColor,ConfigRef	options: useColor(conf: ConfigRef): bool	
parseNimVersion	front/options.html#parseNimVersion,string	options: parseNimVersion(a: string): NimVer	
assignIfDefault	front/options.html#assignIfDefault,T,T,typeof(default(T))	options: assignIfDefault[T](result: var T; val: T; def = default(T))	
setErrorMaxHighMaybe	front/options.html#setErrorMaxHighMaybe.t,ConfigRef	options: setErrorMaxHighMaybe(conf: ConfigRef)	
setNoteDefaults	front/options.html#setNoteDefaults,ConfigRef,ReportKind	options: setNoteDefaults(conf: ConfigRef; note: ReportKind; enabled = true)	
setNote	front/options.html#setNote,ConfigRef,ReportKind	options: setNote(conf: ConfigRef; note: ReportKind; enabled = true)	
hasHint	front/options.html#hasHint,ConfigRef,ReportKind	options: hasHint(conf: ConfigRef; note: ReportKind): bool	
hasWarn	front/options.html#hasWarn,ConfigRef,ReportKind	options: hasWarn(conf: ConfigRef; note: ReportKind): bool	
isEnabled	front/options.html#isEnabled,ConfigRef,ReportKind	options: isEnabled(conf: ConfigRef; report: ReportKind): bool	
isEnabled	front/options.html#isEnabled,ConfigRef,Report	options: isEnabled(conf: ConfigRef; report: Report): bool	
writeEnabled	front/options.html#writeEnabled	ReportWritabilityKind.writeEnabled	
writeDisabled	front/options.html#writeDisabled	ReportWritabilityKind.writeDisabled	
writeForceEnabled	front/options.html#writeForceEnabled	ReportWritabilityKind.writeForceEnabled	
ReportWritabilityKind	front/options.html#ReportWritabilityKind	options: ReportWritabilityKind	
writabilityKind	front/options.html#writabilityKind,ConfigRef,Report	options: writabilityKind(conf: ConfigRef; r: Report): ReportWritabilityKind	
hcrOn	front/options.html#hcrOn,ConfigRef	options: hcrOn(conf: ConfigRef): bool	
oldExperimentalFeatures	front/options.html#oldExperimentalFeatures	options: oldExperimentalFeatures	
ChecksOptions	front/options.html#ChecksOptions	options: ChecksOptions	
DefaultOptions	front/options.html#DefaultOptions	options: DefaultOptions	
DefaultGlobalOptions	front/options.html#DefaultGlobalOptions	options: DefaultGlobalOptions	
getDateStr	front/options.html#getDateStr	options: getDateStr(): string	
getClockStr	front/options.html#getClockStr	options: getClockStr(): string	
newPackageCache	front/options.html#newPackageCache.t	options: newPackageCache(): untyped	
newConfigRef	front/options.html#newConfigRef,ReportHook	options: newConfigRef(hook: ReportHook): ConfigRef	
newPartialConfigRef	front/options.html#newPartialConfigRef	options: newPartialConfigRef(): ConfigRef	
cppDefine	front/options.html#cppDefine,ConfigRef,string	options: cppDefine(c: ConfigRef; define: string)	
getStdlibVersion	front/options.html#getStdlibVersion,ConfigRef	options: getStdlibVersion(conf: ConfigRef): NimVer	
isDefined	front/options.html#isDefined,ConfigRef,string	options: isDefined(conf: ConfigRef; symbol: string): bool	
getDefined	front/options.html#getDefined,ConfigRef,string	options: getDefined(conf: ConfigRef; sym: string): string	
quitOrRaise	front/options.html#quitOrRaise.t,ConfigRef,string	options: quitOrRaise(conf: ConfigRef; msg = &quot;&quot;)	
importantComments	front/options.html#importantComments,ConfigRef	options: importantComments(conf: ConfigRef): bool	
usesWriteBarrier	front/options.html#usesWriteBarrier,ConfigRef	options: usesWriteBarrier(conf: ConfigRef): bool	
compilationCachePresent	front/options.html#compilationCachePresent.t,ConfigRef	options: compilationCachePresent(conf: ConfigRef): untyped	
optPreserveOrigSource	front/options.html#optPreserveOrigSource.t,ConfigRef	options: optPreserveOrigSource(conf: ConfigRef): untyped	
mainCommandArg	front/options.html#mainCommandArg,ConfigRef	options: mainCommandArg(conf: ConfigRef): string	
existsConfigVar	front/options.html#existsConfigVar,ConfigRef,string	options: existsConfigVar(conf: ConfigRef; key: string): bool	
getConfigVar	front/options.html#getConfigVar,ConfigRef,string,string	options: getConfigVar(conf: ConfigRef; key: string; default = &quot;&quot;): string	
setConfigVar	front/options.html#setConfigVar,ConfigRef,string,string	options: setConfigVar(conf: ConfigRef; key, val: string)	
getOutFile	front/options.html#getOutFile,ConfigRef,RelativeFile,string	options: getOutFile(conf: ConfigRef; filename: RelativeFile; ext: string): AbsoluteFile	
absOutFile	front/options.html#absOutFile,ConfigRef	options: absOutFile(conf: ConfigRef): AbsoluteFile	
prepareToWriteOutput	front/options.html#prepareToWriteOutput,ConfigRef	options: prepareToWriteOutput(conf: ConfigRef): AbsoluteFile	
getPrefixDir	front/options.html#getPrefixDir,ConfigRef	options: getPrefixDir(conf: ConfigRef): AbsoluteDir	
setDefaultLibpath	front/options.html#setDefaultLibpath,ConfigRef	options: setDefaultLibpath(conf: ConfigRef)	
canonicalizePath	front/options.html#canonicalizePath,ConfigRef,AbsoluteFile	options: canonicalizePath(conf: ConfigRef; path: AbsoluteFile): AbsoluteFile	
setFromProjectName	front/options.html#setFromProjectName,ConfigRef,string	options: setFromProjectName(conf: ConfigRef; projectName: string)	
removeTrailingDirSep	front/options.html#removeTrailingDirSep,string	options: removeTrailingDirSep(path: string): string	
disableNimblePath	front/options.html#disableNimblePath,ConfigRef	options: disableNimblePath(conf: ConfigRef)	
clearNimblePath	front/options.html#clearNimblePath,ConfigRef	options: clearNimblePath(conf: ConfigRef)	
getNimbleFile	front/options.html#getNimbleFile,ConfigRef,string	options: getNimbleFile(conf: ConfigRef; path: string): string	
getPackageName	front/options.html#getPackageName,ConfigRef,string	options: getPackageName(conf: ConfigRef; path: string): string	
fakePackageName	front/options.html#fakePackageName,ConfigRef,AbsoluteFile	options: fakePackageName(conf: ConfigRef; path: AbsoluteFile): string	
demanglePackageName	front/options.html#demanglePackageName,string	options: demanglePackageName(path: string): string	
withPackageName	front/options.html#withPackageName,ConfigRef,AbsoluteFile	options: withPackageName(conf: ConfigRef; path: AbsoluteFile): AbsoluteFile	
getNimcacheDir	front/options.html#getNimcacheDir,ConfigRef	options: getNimcacheDir(conf: ConfigRef): AbsoluteDir	
pathSubs	front/options.html#pathSubs,ConfigRef,string,string	options: pathSubs(conf: ConfigRef; p, config: string): string	
nimbleSubs	front/options.html#nimbleSubs.i,ConfigRef,string	options: nimbleSubs(conf: ConfigRef; p: string): string	
toGeneratedFile	front/options.html#toGeneratedFile,ConfigRef,AbsoluteFile,string	options: toGeneratedFile(conf: ConfigRef; path: AbsoluteFile; ext: string): AbsoluteFile	
completeGeneratedFilePath	front/options.html#completeGeneratedFilePath,ConfigRef,AbsoluteFile,bool	options: completeGeneratedFilePath(conf: ConfigRef; f: AbsoluteFile;\n                          createSubDir: bool = true): AbsoluteFile	
toRodFile	front/options.html#toRodFile,ConfigRef,AbsoluteFile	options: toRodFile(conf: ConfigRef; f: AbsoluteFile; ext = RodExt): AbsoluteFile	
getRelativePathFromConfigPath	front/options.html#getRelativePathFromConfigPath,ConfigRef,AbsoluteFile	options: getRelativePathFromConfigPath(conf: ConfigRef; f: AbsoluteFile; isTitle = false): RelativeFile	
findFile	front/options.html#findFile,ConfigRef,string	options: findFile(conf: ConfigRef; f: string; suppressStdlib = false): AbsoluteFile	
findModule	front/options.html#findModule,ConfigRef,string,string	options: findModule(conf: ConfigRef; modulename, currentModule: string): AbsoluteFile	
findProjectNimFile	front/options.html#findProjectNimFile,ConfigRef,string	options: findProjectNimFile(conf: ConfigRef; pkg: string): string	
canonicalImportAux	front/options.html#canonicalImportAux,ConfigRef,AbsoluteFile	options: canonicalImportAux(conf: ConfigRef; file: AbsoluteFile): string	
canonicalImport	front/options.html#canonicalImport,ConfigRef,AbsoluteFile	options: canonicalImport(conf: ConfigRef; file: AbsoluteFile): string	
inclDynlibOverride	front/options.html#inclDynlibOverride,ConfigRef,string	options: inclDynlibOverride(conf: ConfigRef; lib: string)	
isDynlibOverride	front/options.html#isDynlibOverride,ConfigRef,string	options: isDynlibOverride(conf: ConfigRef; lib: string): bool	
parseIdeCmd	front/options.html#parseIdeCmd,string	options: parseIdeCmd(s: string): IdeCmd	
`$`	front/options.html#$,IdeCmd	options: `$`(c: IdeCmd): string	
floatInt64Align	front/options.html#floatInt64Align,ConfigRef	options: floatInt64Align(conf: ConfigRef): int16	
